services:
  mongo.db.catalog:
    restart: always
    image: mongo:8.0-rc
    container_name: mongo.db.catalog.container
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27030:27017"
    volumes:
      - mongo.db.catalog.volume:/data/db
  mongo.db.catalog.ui:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo.db.catalog.ui.container
    ports:
      - 27032:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo.db.catalog:27017/
      ME_CONFIG_BASICAUTH: false
  redis.db.basket:
    restart: always
    image: redis:7.0-alpine
    container_name: redis.db.container
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis.db.basket.volume:/data
  redis.db.basket.ui:
    restart: always
    image: rediscommander/redis-commander:latest
    container_name: redis.db.basket.ui.container
    ports:
      - "27033:8081"
    environment:
      REDIS_HOST: redis.db.basket
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: ${REDIS_UI_USERNAME}
      HTTP_PASSWORD: ${REDIS_UI_PASSWORD}
  mongo.db.discount:
    restart: always
    image: mongo:8.0-rc
    container_name: mongo.db.discount.container
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27034:27017"
    volumes:
      - mongo.db.discount.volume:/data/db
  mongo.db.discount.ui:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo.db.discount.ui.container
    ports:
      - 27036:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo.db.discount:27017/
      ME_CONFIG_BASICAUTH: false
  sqlserver.db.order:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver.db.order
    restart: always
    user: root
    environment:
      SA_PASSWORD: ${SA_PASSWORD}
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver.db.order.volume:/var/opt/mssql
  sqlserver.db.identity:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver.db.identity
    restart: always
    user: root
    environment:
      SA_PASSWORD: ${SA_PASSWORD}
      ACCEPT_EULA: "Y"
    ports:
      - "1435:1433"
    volumes:
      - sqlserver.db.identity.volume:/var/opt/mssql
  payment.api:
    build:
      context: .
      dockerfile: EduMicroService.Payment.Api/dockerfile
    container_name: payment.api
    ports:
      - "5096:8080"
  basket.api:
    build:
      context: .
      dockerfile: EduMicroService.Basket.Api/dockerfile
    container_name: basket.api
    ports:
      - "5153:8080"
    environment:
      - "ConnectionStrings:Redis=redis.db.basket,password=Password1"
    depends_on:
      - redis.db.basket
  catalog.api:
    build:
      context: .
      dockerfile: EduMicroService.Catalog.Api/dockerfile
    container_name: catalog.api
    ports:
      - "5198:8080"
    environment:
      - "MongoOption:DatabaseName=catalog-db"
      - "MongoOption:ConnectionString=mongodb://myuser:Password1@mongo.db.catalog"
    depends_on:
      - mongo.db.catalog
  # Önemli not: Identity API test edildi sorunsuz çalıştır fakat önemli bir not sql server identity db yavaş açıldığı için sanırım api ilk başta çalışmıyor.
  # Bu yüzden docker-compose up -d komutunu verdikten sonra 5-10 dakika bekleyin ve ardından identity.api servisini başlatın.
  # Bu sorunu bir çözüm ara.
  identity.api:
    build:
      context: .
      dockerfile: EduMicroService.Identity.Api/dockerfile
    container_name: identity.api
    ports:
      - "5108:8080"
    environment:
      - "ConnectionStrings:DefaultConnection=Server=sqlserver.db.identity,1433;Database=IdentityDb;User=sa;Password=Password1;Trusted_Connection=False;TrustServerCertificate=True;Integrated Security=False"
      - TokenOption__Issuer=www.authserver.edumicroservice.com
      - TokenOption__AccessTokenExpiration=1440
      - TokenOption__RefreshTokenExpiration=600
      - TokenOption__SecurityKey=mysecuritykeymysecuritykeymysecuritykeymysecuritykey
      - TokenOption__Audiences__0=www.authserver.edumicroservice.com
      - TokenOption__Audiences__1=www.catalog.edumicroservice.com
      - TokenOption__Audiences__2=www.order.edumicroservice.com
      - Clients__0__ClientId=mvc
      - Clients__0__ClientSecret=mvc_ClientSecret
      - Clients__0__Audiences__0=www.authserver.edumicroservice.com
      - Clients__0__Audiences__1=www.catalog.edumicroservice.com
      - Clients__0__Audiences__2=www.basket.edumicroservice.com
    depends_on:
      - sqlserver.db.identity
volumes:
  mongo.db.catalog.volume:
  redis.db.basket.volume:
  mongo.db.discount.volume:
  sqlserver.db.order.volume:
  sqlserver.db.identity.volume: